generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int            @id @default(autoincrement())
  email          String         @unique
  password       String
  name           String
  profile        Profile?
  medicalProfile MedicalProfile?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       // Removed @updatedAt
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String? // No default for optional text
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])
}

model MedicalProfile {
  id              Int             @id @default(autoincrement())
  bloodType       String          @default("") // Default to empty string
  allergies       String[]        @default([]) // Default to empty array
  medications     String[]        @default([]) // Default to empty array
  conditions      String[]        @default([]) // Default to empty array
  vaccinations    String[]        @default([]) // Default to empty array
  lastCheckup     DateTime        @default(now()) // Default to current time
  favoriteDoctors FavoriteDoctor[]
  userId          Int             @unique
  user            User            @relation(fields: [userId], references: [id])
}

model FavoriteDoctor {
  id               Int            @id @default(autoincrement())
  medicalProfileId Int
  medicalProfile   MedicalProfile @relation(fields: [medicalProfileId], references: [id])
  doctorId         Int
  doctor           Doctor         @relation(fields: [doctorId], references: [id])
}

model Hospital {
  id              Int            @id @default(autoincrement())
  name            String
  email           String         @unique
  password        String
  licenseNumber   String         @unique
  phone   String         @default("")
  contactPerson           String   @default("")
  address        String         @default("")
  consultationFee Float          @default(0.0) // Default fee
  rating          Float          @default(0.0) // Default rating
  waitTime        Int            @default(0)   // Default wait time in minutes
  latitude        Float          @default(0.0)
  longitude       Float          @default(0.0)
  specialities    String[]       @default([])  // Default to empty array
  about           String         @default("")  // Default to empty string
  nextAvailable   DateTime       @default(now()) // Default to current time
  verified        Boolean        @default(false) // Default to unverified
  amenities       String[]       @default([])  // Default to empty array
  beds            Bed?           @relation("HospitalBeds")
  blood           Blood?         @relation("HospitalBlood")
  oxygen          Oxygen?        @relation("HospitalOxygen")
  ambulance       Ambulance?     @relation("HospitalAmbulance")
  doctors         Doctor[]
  alerts          Alert[]
  announcements   Announcement[]
  appointments    Appointment[]
  stats           Stats?
  createdAt       DateTime       @default(now())

}

model Bed {
  id         Int      @id @default(autoincrement())
  hospitalId Int      @unique
  hospital   Hospital @relation("HospitalBeds", fields: [hospitalId], references: [id])
  icu        Int      @default(0)
  general    Int      @default(0)
  emergency  Int      @default(0)
  maternity  Int      @default(0)
  pediatric  Int      @default(0)
}

model Blood {
  id         Int      @id @default(autoincrement())
  hospitalId Int      @unique
  hospital   Hospital @relation("HospitalBlood", fields: [hospitalId], references: [id])
  aPositive  Int      @default(0) @map("a_positive")
  bPositive  Int      @default(0) @map("b_positive")
  oPositive  Int      @default(0) @map("o_positive")
  abPositive Int      @default(0) @map("ab_positive")
}

model Oxygen {
  id              Int      @id @default(autoincrement())
  hospitalId      Int      @unique
  hospital        Hospital @relation("HospitalOxygen", fields: [hospitalId], references: [id])
  oxygenCylinders Int      @default(0) @map("oxygen_cylinders")
  liquidOxygen    Int      @default(0) @map("liquid_oxygen")
}

model Ambulance {
  id               Int      @id @default(autoincrement())
  hospitalId       Int      @unique
  hospital         Hospital @relation("HospitalAmbulance", fields: [hospitalId], references: [id])
  total            Int      @default(0)
  inOperation      Int      @default(0) @map("in_operation")
  underMaintenance Int      @default(0) @map("under_maintenance")
}

model Doctor {
  id             Int       @id @default(autoincrement())
  name           String
  specialization String
  shift          String    @default("Not Assigned") // Default shift
  hospitalId     Int
  hospital       Hospital  @relation(fields: [hospitalId], references: [id])
  favoritedBy    FavoriteDoctor[]
}

model Alert {
  id         Int       @id @default(autoincrement())
  type       String
  location   String
  time       DateTime  @default(now()) // Default to current time
  hospitalId Int
  hospital   Hospital  @relation(fields: [hospitalId], references: [id])
}

model Announcement {
  id         Int       @id @default(autoincrement())
  title      String
  message    String
  date       DateTime  @default(now()) // Default to current time
  hospitalId Int
  hospital   Hospital  @relation(fields: [hospitalId], references: [id])
}

model Appointment {
  id         Int       @id @default(autoincrement())
  patient    String
  time       DateTime  @default(now()) // Default to current time
  department String
  hospitalId Int
  hospital   Hospital  @relation(fields: [hospitalId], references: [id])
}

model Stats {
  id               Int      @id @default(autoincrement())
  satisfaction     Int      @default(0)
  recoveryRate     Int      @default(0)
  emergencyResponse Int     @default(0)
  hospitalId       Int      @unique
  hospital         Hospital @relation(fields: [hospitalId], references: [id])
}